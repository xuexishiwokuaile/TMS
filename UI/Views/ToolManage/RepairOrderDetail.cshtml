
@{
    ViewBag.Title = "RepairOrderDetail";
    Layout = null;
}

@Styles.Render("~/Content/css")
    <form class="layui-form layui-form-pane1" action="" lay-filter="first">
        <div class="layui-form-item">
            <label class="layui-form-label"></label>
            <div class="layui-input-inline">
                <input type="hidden" name="repairId">
            </div>
        </div>
        @*<div class="layui-form-item">
            <label class="layui-form-label">夹具类选择</label>
            <div class="layui-input-inline">
                <select name="toolType" lay-filter="type" id="type" lay-verify="" autocomplete="off">
                    <option value="">所有夹具类</option>
                </select>
            </div>
            <div class="layui-form-mid layui-word-aux">请选择目标工夹具类</div>
        </div>*@
        <div class="layui-form-item">
            <label class="layui-form-label">夹具类选择</label>
            <div class="layui-input-inline">
                <select id="toolType" name="toolType" class="toolType" lay-filter="toolType">
                </select>
            </div>
            <div class="layui-form-mid layui-word-aux">请选择目标工夹具类</div>
        </div>
        @*<div class="layui-form-item">
            <label class="layui-form-label">夹具序列号选择</label>
            <div class="layui-input-inline">
                <select name="seqId" lay-filter="seqId" id="seqId" lay-verify="" autocomplete="off">
                    <option value="">所有夹具序列号</option>
                </select>
            </div>
            <div class="layui-form-mid layui-word-aux">请选择目标工夹具</div>
        </div>*@
        <div class="layui-form-item">
            <label class="layui-form-label">夹具序列号选择</label>
            <div class="layui-input-inline">
                <select id="seqId" name="seqId" class="seqId" lay-filter="seqId">
                </select>
            </div>
            <div class="layui-form-mid layui-word-aux">请选择目标工夹具</div>
        </div>
        <div class="layui-form-item">
            <div class="layui-upload">
                <label class="layui-form-label">上传图片</label>
                <button type="button" class="layui-btn" id="test1">上传图片</button>

            </div>
        </div>
        <div class="layui-form-item">
            <div class="layui-upload">
                <div class="layui-upload-list">
                    <label class="layui-form-label">预览区</label>
                    <img class="layui-upload-img" id="demo2" style="width:300px;height:auto;">
                </div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">问题描述</label>
            <div class="layui-input-inline">
                <input type="text" name="description" lay-verify="" placeholder="" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux">请对问题进行描述</div>
        </div>
        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit lay-filter="sub">立即提交</button>
                <button onclick="parent.layer.closeAll()" class="layui-btn layui-btn-primary">关闭</button>
            </div>
        </div>
    </form>
@Scripts.Render("~/bundles/layui")
<script type="text/javascript">
    layui.use(["form"], function () {
        var form = layui.form,
            layer = layui.layer,
            $ = layui.$;
        form.render();

        var imageUrl;//新增代码，保存上传图片后回传的图片路径
        form.on("submit(sub)", function (obj) {
            var repair = obj.field;
            console.log(repair);
            layer.load(5, { shade: [0.5, "#5588AA"] });
            $.ajax({
                type: "POST",
                data: {
                    repair: repair,
                    faultPicUrl:imageUrl
                },
                url: "@Url.Action("SubRepairOrderDetail","ToolManage")",
                success: function (result) {
                    if (result.Success) {
                        layer.close(layer.index);
                        window.parent.location.reload();
                        parent.layer.msg(result.Message, { icon: 1 });
                    }
                    else {
                        parent.layer.msg(result.Message, { icon: 5 });
                    }
                }
            })
        });
        //用来记录当前选择夹具类的
        //var toolType;
        @*form.on('select(type)', function (data) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("SelectToolTypeCode","ToolManage")",//从数据库查询现有的夹具类
                dataType:"json",
                success: function (result) {
                    //console.log(result.data);
                    //第一个是索引，第二个是每项
                    $.each(result.data, function (index, item) {
                        //console.log(item);
                        $('#type').append("<option value= '" + item.typeId + "'>" + item.code + "</option>");
                        //$('#type').append(new Option(item.code));//往下拉菜单里添加元素
                    })
                    form.render("select");//菜单渲染
                }
            })
            toolType = data.value;
            //得到id
            console.log(data.value);

        });*@
        layer.ready(function (data) {
        //新加载列表
            $.ajax({
                type: "GET",
                async: false,//同步进行
                url: "@Url.Action("SelectToolTypeCodeList","ToolManage")",
                success: function (data) {

                    toolTypeList = data;
                
                    strHtml = ``
                    for (let i = 0; i < toolTypeList.length; i++) {
                        strHtml += `<option value="${toolTypeList[i].typeId}">${toolTypeList[i].code}</option>`
                    }
                    $("#toolType").append(strHtml);
                    form.render();
                    //加载对应部门的用户
                }
            })

            var time = 0;
            var id = null;
            form.on('select(toolType)', function (data) {
                $("#seqId").empty();
                form.render();
                console.log("***************************************");
                console.log(data)
                id = data.value;
                time = time + 1;
            $.ajax({
                type: "GET",
                //data: {
                //    toolType: toolType
                //},
                url: "@Url.Action("SelectToolSeqIdList","ToolManage")?toolType=" + data.value,//从数据库查询现有的夹具类
                dataType:"json",
                success: function (data) {

                    seqList = data;
                
                    strHtml = ``
                    for (let i = 0; i < seqList.length; i++) {
                        strHtml += `<option value="${seqList[i].toolId}">${seqList[i].seqId}</option>`
                    }
                    $("#seqId").append(strHtml);
                    form.render();
                    //加载对应部门的用户
                }
            })

        });

        });

        

        //上传图片
        layui.use('upload', function () {
            var $ = layui.jquery;
            var upload = layui.upload;
            //普通图片上传
            var uploadInst = upload.render({
                elem: '#test1',
                url: '@Url.Action("UploadRepairPic","ToolManage")',
                before: function (obj) {
                    obj.preview(function (index, file, result) {
                        //$('#demo1').attr('src', result);
                    });
                },
                done: function (res) {
                    if (res.Result) {
　　　　　　　　　　    //新增代码，将回传的图片保存路径进行保存并将图片绑定到上传后图片展示处
                        imageUrl = res.Data;
                        $("#demo2").attr("src", imageUrl);
                    }
                },
                error: function () {
                    //演示失败状态，并实现重传
                    var demoText = $('#demoText');
                    demoText.html('<span style="color: #FF5722;">上传失败</span> <a class="layui-btn layui-btn-xs demo-reload">重试</a>');
                    demoText.find('.demo-reload').on('click', function () {
                        uploadInst.upload();
                    });
                }
            });
        });

        
        var repair = '@Html.Raw(ViewBag.repair)';
        var jsonRepair = JSON.parse(repair);
        console.log(jsonRepair);


        form.val("first", jsonRepair);

    })
</script>


